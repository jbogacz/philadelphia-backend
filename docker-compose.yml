services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: 'no'
    command: ["--replSet", "rs0", "--bind_ip_all", "--noauth"]
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: admin
    #   MONGO_INITDB_ROOT_PASSWORD: password123
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - mongo_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-init:
    image: mongo:latest
    container_name: mongo-init
    restart: "no"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - mongo_network
    command: >
      mongosh --host mongodb:27017 --eval
      '
      rs.initiate({
        _id: "rs0",
        members: [{ _id: 0, host: "localhost:27017" }]
      })
      '

  # minio:
  #   image: quay.io/minio/minio:latest
  #   container_name: minio-google-file-storage
  #   restart: 'no'
  #   ports:
  #     - '9000:9000' # API port
  #     - '9001:9001' # Console port
  #   environment:
  #     MINIO_ROOT_USER: admin
  #     MINIO_ROOT_PASSWORD: password123
  #   command: server /data --console-address ":9001"
  #   volumes:
  #     - minio_data:/data
  #   healthcheck:
  #     test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3

volumes:
  mongodb_data:
    name: mongodb_data
  # minio_data:
  #   name: minio_data

networks:
  mongo_network:
    name: mongo_network
